runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
rm(list = ls())
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
rm(list = ls())
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
rm(list = ls())
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_1_Shiny')
rm(list = ls())
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_2')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
rm(list = ls())
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(0,n, length=n), x)
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- x[i-1] + rnorm(1,0,7)
}
sim2 <- tibble(t=seq(0,n, length=n), x)
data <- sim1%>%mutate(sim2$x)
p1 <- ggplot(data, aes(t)) + geom_line(aes(y=x, colour = "x")) + geom_line(aes(y=sim2$x, colour= "sim2$x"))
p2 <- ggplot(data, aes(x,sim2$x)) + geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1, p2, ncol=2)
rm(list = ls())
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
shiny::runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
rm(list = ls())
shiny::runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
rm(list = ls())
shiny::runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
shiny::runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
seq(0,10, lenght = 1000)
n <- 100
seq(0,n, length=n)
n <- 100
seq(0,n, length=n)
n <- 1000
seq(0,n, length=n)
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
shiny::runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
rm(list = ls())
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- x[i-1] + rnorm(1,0,input$nvariance1)
}
for(i in 2:n){
x[i] <- x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
y <- c()
y[1] <- 1
for(i in 2:n){
y[i] <- y[i-1] + rnorm(1,0,7)
}
sim2 <- tibble(t=seq(1,n, length=n), y)
# tibble(t=seq(1,n, lenght = n), x, y)
data <- sim1%>%mutate(sim2$y)
p1 <- ggplot(data1(), aes(t)) + geom_line(aes(y=x, colour = "x")) + geom_line(aes(y=sim2$y, colour= "sim2$y"))
p2 <- ggplot(data1(), aes(x,sim2$y)) + geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(data, aes(t)) + geom_line(aes(y=x, colour = "x")) + geom_line(aes(y=sim2$y, colour= "sim2$y"))
p2 <- ggplot(data, aes(x,sim2$y)) + geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(data, aes(t)) + geom_line(aes(y=x, colour = "x")) + geom_line(aes(y=sim2$y, colour= "sim2$y"))
p2 <- ggplot(data, aes(x,sim2$y)) + geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(data, aes(t)) + geom_line(aes(y=x, colour = "x")) + geom_line(aes(y=sim2$y, colour= "sim2$y"))
p2 <- ggplot(data, aes(x,sim2$y)) + geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(data, aes(t)) + geom_line(aes(y=x, colour = "x")) + geom_line(aes(y=sim2$y, colour= "sim2$y"))
p2 <- ggplot(data, aes(x,sim2$y)) + geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(data, aes(t))  # + geom_line(aes(y=x, colour = "x")) + geom_line(aes(y=sim2$y, colour= "sim2$y"))
p2 <- ggplot(data, aes(x,sim2$y)) + geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(data, aes(t)) + geom_line(aes(y=x, colour = "x")) #+ geom_line(aes(y=sim2$y, colour= "sim2$y"))
p2 <- ggplot(data, aes(x,sim2$y)) + geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(data, aes(t)) + geom_line(aes(y=x, colour = "x")) + geom_line(aes(y=y, colour= "y"))
p2 <- ggplot(data, aes(x,sim2$y)) + geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1, p2, ncol=2)
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
rm(list = ls())
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
rm(list = ls())
shiny::runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
rm(list = ls())
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
library(tidyverse)
library(gridExtra)
################################
##                            ##
###### Generate two models######
##                            ##
## X[t] = 0.3*X[t-1] + e1[t]  ##
## Y[t] = e2[t] + 0.2*e2[t-1] ##
##                            ##
################################
rm(list = ls())
n <- 1000
x <- c()
x[1] <- 1
e1 <- rnorm(n, mean = 0, sd = 1)
for(i in 2:n){
x[i] <- 0.3 * x[i-1] +e1[i]
}
sim1<-tibble(t=seq(0,n, length=n), x)
y <- c()
e2 <- rnorm(n, mean = 0, sd = 1)
y[1] <- e2[1]
for(i in 2:n){
y[i] <- e2[i] + 0.2*e2[i-1]
}
sim2<-tibble(t=seq(0,n, length=n), y)
data<-sim1%>%mutate(sim2$y)
p1<-ggplot(data, aes(t))+geom_line(aes(y=x, colour = "x")) + geom_line(aes(y=sim2$y, colour= "sim2$y"))
p2<-ggplot(data, aes(x,sim2$y)) + geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1, p2, ncol=2)
library(tidyverse)
library(gridExtra)
################################
##                            ##
###### Generate two models######
##                            ##
## X[t] = 0.3*X[t-1] + e1[t]  ##
## Y[t] = e2[t] + 0.2*e2[t-1] ##
##                            ##
################################
rm(list = ls())
n <- 100
x <- c()
x[1] <- 1
e1 <- rnorm(n, mean = 0, sd = 1)
for(i in 2:n){
x[i] <- 0.3 * x[i-1] +e1[i]
}
sim1<-tibble(t=seq(0,n, length=n), x)
y <- c()
e2 <- rnorm(n, mean = 0, sd = 1)
y[1] <- e2[1]
for(i in 2:n){
y[i] <- e2[i] + 0.2*e2[i-1]
}
sim2<-tibble(t=seq(0,n, length=n), y)
data<-sim1%>%mutate(sim2$y)
p1<-ggplot(data, aes(t))+geom_line(aes(y=x, colour = "x")) + geom_line(aes(y=sim2$y, colour= "sim2$y"))
p2<-ggplot(data, aes(x,sim2$y)) + geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1, p2, ncol=2)
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Quiz_1')
library(shiny) # load the shiny package
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
library(shiny) # Load shiny package
library(tidyverse)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 1 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
tibble(t=seq(1,n, length = n), x, y)
ggplot(sim1, aes(t)) + geom_line(aes(y=x, colour = "x")) + geom_line(aes(y=y, colour= "y"))
# First Correlogram Example
library(corrgram)
corrgram(mtcars, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Car Milage Data in PC2/PC1 Order")
installed.packages('corrgram')
library(corrgram)
corrgram(mtcars, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Car Milage Data in PC2/PC1 Order")
installed.packages('corrgram')
install.packages("corrplot")
install.packages("corrplot")
# install.packages("corrplot")
install.packages("corrgram")
library(corrgram)
corrgram(mtcars, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Car Milage Data in PC2/PC1 Order")
corrgram(sim1, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Car Milage Data in PC2/PC1 Order")
#sim 4
sim4 <- tibble(x = seq(0, 100, length = 50), y = 1.4 * x + rnorm(length(x)))
ggplot(sim4, aes(x, y))+ geom_line()
#sim7
a<-0.3
n<-50
x<-c()
for(i in 2:n){
x[1]<-1
x[i]=a*x[i-1]
}
time <- seq(from = as.Date("1970-01-01"), to = as.Date("2019-01-01"), by = 'year')
series <- ts(x, frequency=1, start=c(1970))
#year = format(time, "%Y")
l<-cbind.data.frame(time,x)
colnames(l)<-cbind("time","series")
data<-as.tibble(l)
ggplot(data, aes(time, x), xlab=format(time, "%Y")) + geom_line()
library(shiny) # Load shiny package
library(tidyverse)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 1 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
data<-as.tibble(l)
ggplot(data, aes(t, x), xlab=format(t, "%Y")) + geom_line()
library(shiny) # Load shiny package
library(tidyverse)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 1 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
data<-as.tibble(sim1)
ggplot(data, aes(t, x), xlab=format(t, "%Y")) + geom_line()
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
library(shiny) # Load shiny package
library(tidyverse)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 2 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
data<-as.tibble(sim1)
ggplot(data, aes(t, x), xlab=format(t, "%Y")) + geom_line()
library(shiny) # Load shiny package
library(tidyverse)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 1 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
data<-as.tibble(sim1)
ggplot(data, aes(t, x), xlab=format(t, "%Y")) + geom_line()
library(shiny) # Load shiny package
library(tidyverse)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 2 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
data<-as.tibble(sim1)
ggplot(data, aes(t, x), xlab=format(t, "%Y")) + geom_line()
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
library(shiny) # Load shiny package
library(tidyverse)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 2 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
data<-as.tibble(sim1)
# ggplot(data, aes(t, x), xlab=format(t, "%Y")) + geom_line()
acf(data$residuals, lag.max=20)
acf(data, lag.max=20)
library(shiny) # Load shiny package
library(tidyverse)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 2 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
data<-as.tibble(sim1)
# ggplot(data, aes(t, x), xlab=format(t, "%Y")) + geom_line()
acf(data, lag.max=20, type = "correlation")
library(shiny) # Load shiny package
library(tidyverse)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 2 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
data<-as.tibble(sim1)
# ggplot(data, aes(t, x), xlab=format(t, "%Y")) + geom_line()
acf(data, lag.max=20, type = "correlation")
library(shiny) # Load shiny package
library(tidyverse)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 2 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
data<-as.tibble(sim1)
# ggplot(data, aes(t, x), xlab=format(t, "%Y")) + geom_line()
acf(data, lag.max=20, type = "correlation")
library(shiny) # Load shiny package
library(tidyverse)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 2 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
data<-as.tibble(sim1)
# ggplot(data, aes(t, x), xlab=format(t, "%Y")) + geom_line()
acf(data, lag.max=n, type = "correlation")
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
library(shiny) # Load shiny package
library(tidyverse)
library(gridExtra)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 2 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
data<-as.tibble(sim1)
p1 <- ggplot(data, aes(t, x), xlab=format(t, "%Y")) + geom_line()
p2 <- acf(data, lag.max=n, type = "correlation")
grid.arrange(p1, p2, ncol=2)
p2 <- acf(data, lag.max=n, type = "correlation")
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 2 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
data<-as.tibble(sim1)
p1 <- ggplot(data, aes(t, x), xlab=format(t, "%Y")) + geom_line()
p2 <- acf(data, lag.max=n, type = "correlation")
p2 <- acf(data, lag.max=n, type = "correlation")[1][1]
p2
grid.arrange(p1, p2, ncol=2)
p2 <- acf(data, lag.max=n, type = "correlation")[1]
p2
grid.arrange(p1, p2, ncol=2)
dev.new(height=6, width=4.5)
par(mfrow=c(2,1), mar=c(3,4,0.5,0.5))
testAR1 <- arima.sim(n=300, list(ar=c(0.5)))
test_acf <- acf(testAR1)
test_acf_CritVal <- qnorm((1 + 0.95)/2)/sqrt(test_acf$n.used) #change the 0.95 to the desired CI
abline(h=test_acf_CritVal, col="red") #add the calculated CI to the plot, just to check that it goes in the right spot
test_pacf <- pacf(testAR1)
test_pacf_CritVal <- qnorm((1 + 0.95)/2)/sqrt(test_pacf$n.used) #change the 0.95 to the desired CI
abline(h=test_pacf_CritVal, col="red") #add the calculated CI to the plot, just to check that it goes in the right spot
rm(list = ls())
dev.new(height=6, width=4.5)
par(mfrow=c(2,1), mar=c(3,4,0.5,0.5))
testAR1 <- arima.sim(n=300, list(ar=c(0.5)))
test_acf <- acf(testAR1)
test_acf_CritVal <- qnorm((1 + 0.95)/2)/sqrt(test_acf$n.used) #change the 0.95 to the desired CI
abline(h=test_acf_CritVal, col="red") #add the calculated CI to the plot, just to check that it goes in the right spot
rm(list = ls())
dev.new(height=6, width=4.5)
par(mfrow=c(2,1), mar=c(3,4,0.5,0.5))
testAR1 <- arima.sim(n=300, list(ar=c(0.5)))
test_acf <- acf(testAR1)
# test_acf_CritVal <- qnorm((1 + 0.95)/2)/sqrt(test_acf$n.used) #change the 0.95 to the desired CI
# abline(h=test_acf_CritVal, col="red") #add the calculated CI to the plot, just to check that it goes in the right spot
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
rm(list = ls())
library(shiny) # Load shiny package
library(tidyverse)
library(gridExtra)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 2 * x[i-1] + rnorm(1,0,2)
}
sim1 <- tibble(t=seq(1,n, length=n), x)
# dev.new(height=6, width=4.5)
# par(mfrow=c(2,1), mar=c(3,4,0.5,0.5))
#
# testAR1 <- arima.sim(n=300, list(ar=c(0.5)))
test_acf <- acf(sim1)
dummy<-c(14,0.004,0.2,1,0.002,-3,-0.042,1.2,-1,1.3,2.1,4,3001,-2,0.3,2,3)
acf(dummy)
acf(x)
n <- 1000
x <- c()
x[1] <- 1
for(i in 2:n){
x[i] <- 2 * x[i-1] + rnorm(1,0,2)
}
acf(x)
acf(x = x)
acf(x = sim1)
Acf(x, lag.max = 12, type = c("correlation", "covariance", "partial"), plot = TRUE, na.action = na.contiguous, demean = TRUE)
Pacf(x, lag.max = 12, plot = TRUE, na.action = na.contiguous, demean = TRUE)
Acf(x, lag.max = 12, type = c("correlation", "covariance", "partial"), plot = TRUE, na.action = na.contiguous, demean = TRUE)
pacf(x = sim1)
pacf(sim1)
library(forecast)
Acf(x, lag.max = 12, type = c("correlation", "covariance", "partial"), plot = TRUE, na.action = na.contiguous, demean = TRUE)
Acf(sim1)
Acf(sim1)[1]
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
y <- c()
e <- rnorm(n, mean = 0, sd = input$nvariance2)
y[1] <- e[1]
for(i in 2:n){
y[i] <- e[i] + input$intercept2 * e[i-1]
}
sim2 <- tibble(t=seq(1,n, length=n), y)
n <- 1000
y <- c()
e <- rnorm(n, mean = 0, sd = input$nvariance2)
y[1] <- e[1]
for(i in 2:n){
y[i] <- e[i] + input$intercept2 * e[i-1]
}
sim2 <- tibble(t=seq(1,n, length=n), y)
n <- 1000
y <- c()
e <- rnorm(n, mean = 0, sd = input$nvariance2)
y[1] <- e[1]
for(i in 2:n){
y[i] <- e[i] + 2 * e[i-1]
}
sim2 <- tibble(t=seq(1,n, length=n), y)
n <- 1000
y <- c()
e <- rnorm(n, mean = 0, sd = 2)
y[1] <- e[1]
for(i in 2:n){
y[i] <- e[i] + 2 * e[i-1]
}
sim2 <- tibble(t=seq(1,n, length=n), y)
acf(sim2)
runApp('C:/Users/User/Desktop/ddxk')
runApp('C:/Users/User/Desktop/ddxk')
runApp('C:/Users/User/Desktop/ddxk')
runApp('C:/Users/User/Desktop/ddxk')
runApp('C:/Users/User/Desktop/ddxk')
runApp('C:/Users/User/Desktop/ddxk')
library(ggplot2)
runApp('C:/Users/User/Desktop/ddxk')
runApp('C:/Users/User/Desktop/ddxk')
runApp('C:/Users/User/Desktop/ddxk')
runApp('C:/Users/User/Desktop/ddxk')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('C:/Users/User/Desktop/ddxk')
runApp('C:/Users/User/Desktop/ddxk')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
runApp('D:/MyProjects/ASDS_2/TimeSeriesAnalysis/Homeworks/Homework_3')
